'use strict';

/* Пусть у нас будет персонаж, теоретически это должен быть 'только каркас' */
class Character {
        #inventory = [];
        #health = 10;
        /* Возможно наш персонаж и может хранить в себе сведения о здоровье и инвентаре */
        pickItem(item) {
                this.#inventory.push(item);
        }

        recieveDamage(damage) {
                this.#health -= damage;
        }
        
        /*
        Но тут мы нарушаем принцип единой ответственности, т.к. 
        персонаж не должен отвечать за то, где он будет храниться 
        (как туда помещаться и извлекаться). И тем более так грубо
        к единственной БД (а если нам нужно его зранить в MongoDB).
        */
        saveCharacter() {
                localStorage.setItem('char', this);
        }

        loadCharacter() {
                // some code...
        }
}

/* Лучше реализовать единую точку входа в БД */
class DB {
        save(item) {
                // Логика по сохранению элемента в БД
        }

        load(item) {
                // Логика по извлечению элемента из БД
        }
}